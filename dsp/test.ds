if(alpha)
	f(6)
	call(beta)
else
	call(gamma)
	a = foo()
end

if(false)
	Maybe
end

DIEDIEDIE

if(1)
	if(2)
		if(3)
			123
		else
			call(12)
		end
	elsif(4)
		124
	elsif(5)
		call(125)
	end
else
	call("param")
end
asdf = 2

if(false)
	Maybe
end

if(true)
	Apple
	Baby
	Cauldron
	Dippindots
elsif(true)
	Enough
	French
	Gravy
else(10 < 6)
	Having
	Ice
	Just
	Kills
	Lice
end

DIEDIEDIE
b = 1 + 2
b = call("t-rex", 5) - 6 * (Bubbles && false)
DIEDIEDIE
b = (call((1), "two", (three((4), 2, (123)))))
b
a = call(1, "Two", three(3))
a = (("hello"))
a = (((1)))


a = -5
a = -5.0
a = false
a = true
a = foo
a = 123456.213456
a = 123456.
a = -5.55555
a = 5
b = "I'm a string"
DIEDIEDIE

Breakfast = 2
_12435 = Bubbles


func phooey(param1, param2)
	use foo
end

use sampleLib

func empty()
end


func empty()
	use foo
end


func print(whatever)
	// TODO: Libraries
end

func seven()
	return 7
end

DIEDIEDIE

DIEDIEDIE
//----------------------------------------------------------------------------------------------------

func main(params)

	for p in params
		print(p)
	end
	
	a = 5
	for i from a to (a + 3) * 2
		print(i)
	end
	
	// This is a comment
	if a  == 6 then
		print(10)
	else
		print("This is a string.")
	end
	
	while 7 > a
		a = a + 1
		// Here's a comment
	end
	
	b = 1
	c = b < a
	if c then
		c = seven()
	end
	
	a7 = "seven"
	if("seven" == a7)
		a7 = true
	end
	
	do
		print(seven() + (b - 6))
		b = b * 2
	while b < 1000 * 10
	
	q = "donuts"
	switch "donuts"
		case "fritters":
			print("fritters will now print twice")
		case "bacon":
			print("fritters for the last time")
		case q:
			print("This is the real answer.")
		end
	end
	
	c = MyClass(17)
	c = MyOtherClass()
	c = 0 // destroys c

end

//----------------------------------------------------------------------------------------------------

class MyClass
	var value_
	
	/* This is a comment that spans lines.
	 * It's a few lines long. // This is also part of the multi-line comment.
	 * It ends here: */
	
	func MyClass(value)
		value_ = value * 2
		return "This return value will be ignored. This is the constructor."
	end
	
	func get()
		return value_
	end
end

//----------------------------------------------------------------------------------------------------

class MyOtherClass from MyClass

	func MyOtherClass
		parent(7)
	end
	
	func ~MyOtherClass
		print("I've seen things you people wouldn't believe.")
	end
	
	func moreThanOneParam(one, two, three)
		one = 1
		print(two)
		three // Does nothing
	end
	
	func get(brave, little, toaster)
		// This overrides the function in MyClasss.
		return parent.get()
	end
	
end	

to (a + 3)
to(b+0)
for i from a to (a + 3) * 2
print(10)
print("This is a string.")

"\n"
"\\n"
/END/

one/*two*/three
alpha/*bravo
charlie
delta*/easter*/
friday/*gatsby/*hipster/*india*/just
one
two
newline

+= asdf==qwdf qwdf== ==asdktj ++i /* asdf */ after
